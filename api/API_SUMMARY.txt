
>>> 一边练习CS技能，一边练习英语技能吧各位！赶时间的话就写中文也行，
但长久来说我们保持这个文档为英文的叭！学好英文，出国读研，或进入外企～
只有好处没有坏处的哈～

--------------------------------------------------
HOST: https://eduace.herokuapp.com (currently broken ???)
	  (use localhost for testing.)
--------------------------------------------------

==================== REGISTER ====================
* Note 
* register requires the Authorization token generated from an admin request,
* which means one must login as admin to register accounts for others.

POST: /api/register/student
request body (JSON): 
request header:
	Authorization: Bearer <token>
{
	"userid": "...",
	"password": "...",
	"grade": ...
}

POST: /api/register/teacher
request header:
	Authorization: Bearer <token>
request body (JSON):
{
	"userid": "...",
	"password": "..."
}

POST: /api/register/admin
request header:
	Authorization: Bearer <token>
request body (JSON):
{
	"userid": "...",
	"password": "..."
}

====================== LOGIN ======================

POST: /api/login/student
request body (JSON): 
{
	"userid": "studenttest",
	"password": "test123"
}

POST: /api/login/teacher
request body (JSON):
{
	"userid": "teachertest",
	"password": "test123"
}

POST: /api/login/admin
request body (JSON):
{
	"userid": "admintest",
	"password": "test123"
}

====================== REMOVE ======================
* Note 
* remove requires the Authorization token generated from an admin request,
* which means one must login as admin to register accounts for others.

POST: /api/remove/student
request header:
	Authorization: Bearer <token>
request body (JSON):
{
	"userid":"..."
}

POST: /api/remove/teacher
request header:
	Authorization: Bearer <token>
request body (JSON):
{
	"userid":"..."
}

POST: /api/remove/admin
request header:
	Authorization: Bearer <token>
request body (JSON):
{
	"userid":"..."
}

====================== UPDATE ======================
* Note 
* update requires the Authorization token generated by user himself/herself or admin,
* which means one must login to update himself/herself, or
* one must login as admin to register accounts for others.


====================== PROFILE =====================
POST: /api/update/student
request header:
	Authorization: Bearer <token>
request body (JSON):
{
	"userid": "...", 
	"name": "...",				(optional)
	"contactInfo": "...",		(optional)
	"grade": ...,				(optional)
	"class": "...",				(optional)
	"courses": ["...",...]		(optional)
}

POST: /api/update/teacher
request header:
	Authorization: Bearer <token>
request body (JSON):
{
	"userid": "...", 
	"name": "...",				(optional)
	"contactInfo": "...",		(optional)
	"office": "...",			(optional)
	"class": "...",				(optional)
	"courses": ["...",...]		(optional)
}

================== CHANGE PASSWORD =================
* Note 
* update requires the Authorization token generated by user himself/herself or admin,
* which means one must login to update himself/herself, or
* one must login as admin to register accounts for others.

POST: /api/update/student
request header:
	Authorization: Bearer <token>
request body (JSON):
{
	"userid": "...", 
	"password": "..." 
}


==================== AUTH TEST =====================
This is temporary testing api that uses the auth token
POST: https://eduace.herokuapp.com/api/authtest
request header:
	Authorization: Bearer <token>
request body:
<EMPTY>


===================== COURSE ======================
Eight APIs included.
		==== CREATE ====
POST: /api/course/create
request body (JSON): 
{
	token: "...",
	coursename: "...",
	teacher_id: "...",
	schedule: [...]
}

		==== DELETE ====
POST: /api/course/delete
request body (JSON): 
{
	token: "...",
	course_id: "..."
}

	==== ANNOUNCE ====
POST: /api/course/announce
request body (JSON): 
{
	token: "...",
	course_id: "...",
	announcement: [...]
}

	==== DELETE_ANNOUNCEMENT ====
POST: /api/course/delete_announcement
request body (JSON): 
{
	token: "...",
	course_id: "...",
	announcement_id: "..."
}

;unrealized
		==== EDIT ====
POST: /api/course/edit

	==== QUESTION ====
POST: /api/course/question
request body (JSON): 
{
	token: "...",
	course_id: "...",
	question_title: "...",
	question_content: "..."
}

;unrealized
	==== DELETE_QUESTION ====
POST: /api/course/delete_question
request body (JSON): 
{
	token: "...",
	question_id: "..."
}

	==== SUBMIT_ANSWER ====
POST: /api/course/submit_answer
request body (JSON): 
{
	token: "...",
	question_id: "...",
	content: "..."
}